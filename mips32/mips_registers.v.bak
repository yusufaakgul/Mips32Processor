module mips_registers
(read_reg_1, read_reg_2, write_reg_1, write_data1, write_reg_2, write_data_2,
 read_data_1, read_data_2, signal_reg_write_1,signal_reg_write_2, clc);

	
	input [4:0] read_reg_1, read_reg_2, write_reg_1, write_reg_2;
	
	input [31:0] write_data_1, write_data_2;
	
	output [31:0] read_data_1, read_data_2;

	input signal_reg_write_1,signal_reg_write_2 clk;
	
	reg [31:0] registers [31:0];
		
	//this module use behavioral verilog	
	//--- continuos assignment --- 
	//output data;
	//assign data = registers[adress];
	//--- non-blocking assignment ---
	//register data;
	//always @(posedge clk) begin
	//data <= registers[adress]; end
	
endmodule